version: 2.1

orbs:
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0

jobs:

  lint:
    docker: 
      - image: python:3.7.3-stretch
    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make setup
            make install
            pip3 install pylint
            pylint --help
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
            
#_______________________________________________________________________________________#

  build-docker-image:
    machine: true
    steps:
      - checkout
      - run:
          name: Build Docker Image
          command: |
            docker build --tag=capstone .
            docker image ls
      - run:
          name: Push Docker image into Docker Hub
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
            dockerpath=v4ldus/capstone
            docker tag capstone $dockerpath
            echo "Docker ID and Image: $dockerpath"
            docker push $dockerpath
            
#_______________________________________________________________________________________#

  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          EKS Cluster
        type: string
      aws-region:
        default: 'us-east-1'
        description: |
          AWS region that the EKS cluster will be created in.
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: << parameters.aws-region >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: k8s/deployment.yml
          resource-name: deployment/capstone         
            
#_______________________________________________________________________________________#

workflows:
  default:
    jobs:
      - lint
      - build-docker-image:
          requires: [lint]
      - aws-eks/create-cluster:
          cluster-name: capstone
          aws-region: ${AWS_REGION}
      - create-deployment:
          cluster-name: capstone
          aws-region: ${AWS_REGION}
          requires:
            - aws-eks/create-cluster
      - aws-eks/update-container-image:
          cluster-name: capstone
          aws-region: ${AWS_REGION}
          container-image-updates: "capstone=capstone:latest"
          post-steps:
            - kubernetes/delete-resource:
                resource-names: capstone
                resource-types: deployment
                wait: true
          record: true
          requires:
            - create-deployment
          resource-name: deployment/capstone
